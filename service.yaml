AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Fargate CI/CD Lab - Service Deployment'

Parameters:
  AppName:
    Type: String
    Default: 'java-full-stack'
  VPCId:
    Type: String
  ECSClusterName:
    Type: String
  ALBArn:
    Type: String
  ALBDNSName:  # Added missing parameter
    Type: String
  ALBSecurityGroupId:
    Type: String
  ECSSecurityGroupId:
    Type: String
  PrivateSubnet1Id:
    Type: String
  PrivateSubnet2Id:
    Type: String
  ECRRepositoryURI:  # Added missing parameter
    Type: String
  ECSTaskExecutionRoleArn:  # Added missing parameter
    Type: String
  ECSTaskRoleArn:  # Added missing parameter
    Type: String
  ALBTargetGroupArn:  # Added missing parameter
    Type: String
  CloudWatchLogGroupName:  # Added missing parameter
    Type: String

Resources:
  # --- ECS TASK DEFINITION ---
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AppName}-Task
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRoleArn  # Fixed: Use Ref instead of ImportValue
      TaskRoleArn: !Ref ECSTaskRoleArn  # Fixed: Use Ref instead of ImportValue
      ContainerDefinitions:
        - Name: !Sub ${AppName}-Container
          Image: !Sub ${ECRRepositoryURI}:latest  # Fixed: Use the parameter
          Essential: true
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroupName  # Fixed: Use Ref instead of ImportValue
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: ecs

  # --- ECS SERVICE ---
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub ${AppName}-Service
      Cluster: !Ref ECSClusterName
      TaskDefinition: !Ref ECSTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - !Ref PrivateSubnet1Id
            - !Ref PrivateSubnet2Id
          SecurityGroups:
            - !Ref ECSSecurityGroupId
      LoadBalancers:
        - ContainerName: !Sub ${AppName}-Container
          ContainerPort: 8080
          TargetGroupArn: !Ref ALBTargetGroupArn  # Fixed: Use Ref instead of ImportValue

  # --- AUTOSCALING ---
  ECSServiceAutoScaling:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: ECSService
    Properties:
      MaxCapacity: 4
      MinCapacity: 1
      ResourceId: !Sub service/${ECSClusterName}/${AppName}-Service
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ECSScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ${AppName}-CPU-Scaling
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ECSServiceAutoScaling
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        ScaleOutCooldown: 60
        ScaleInCooldown: 60

Outputs:
  ServiceURL:
    Description: 'URL to access the application'
    Value: !Sub http://${ALBDNSName}  # Now this will work
  ECSServiceName:
    Description: 'ECS Service Name'
    Value: !Ref ECSService