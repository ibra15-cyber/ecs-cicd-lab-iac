AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Fargate Service Stack with CodeDeploy Blue-Green Deployment'

Parameters:
  AppName:
    Type: String
    Default: 'java-full-stack'
  VPCId:
    Type: String
  ECSClusterName:
    Type: String
  ALBArn:
    Type: String
  ALBDNSName:
    Type: String
  ALBSecurityGroupId:
    Type: String
  ECSSecurityGroupId:
    Type: String
  PrivateSubnet1Id:
    Type: String
  PrivateSubnet2Id:
    Type: String
  ECRRepositoryURI:
    Type: String
  ECSTaskExecutionRoleArn:
    Type: String
  ECSTaskRoleArn:
    Type: String
  ALBTargetGroupArn:
    Type: String
  CloudWatchLogGroupName:
    Type: String
  ALBTargetGroupName:
    Type: String
    Description: 'ALB Target Group Name from Infrastructure stack'
  ALBListenerArn:
    Type: String
    Description: 'ALB listener Name from Infrastructure stack'
  CodeDeployServiceRoleArnParam:
    Type: String
    Description: 'CodeDeploy Service Role ARN'

Resources:
  # --- ECS TASK DEFINITION ---
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AppName}-Task
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRoleArn
      TaskRoleArn: !Ref ECSTaskRoleArn
      ContainerDefinitions:
        - Name: !Sub ${AppName}-Container
          Image: !Sub ${ECRRepositoryURI}:latest
          Essential: true
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroupName
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: ecs

  # --- GREEN TARGET GROUP FOR BLUE-GREEN DEPLOYMENT ---
  GreenTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AppName}-Green-TG
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VPCId
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Matcher:
        HttpCode: '200'

  # --- TEST LISTENER FOR BLUE-GREEN DEPLOYMENT ---
  TestListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALBArn
      Port: 9000
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref GreenTargetGroup

  # --- ECS SERVICE (with Load Balancer configuration) ---
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub ${AppName}-Service
      Cluster: !Ref ECSClusterName
      TaskDefinition: !Ref ECSTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      DeploymentController:
        Type: CODE_DEPLOY
      LoadBalancers:
        - TargetGroupArn: !Ref ALBTargetGroupArn
          ContainerName: !Sub ${AppName}-Container
          ContainerPort: 8080
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - !Ref PrivateSubnet1Id
            - !Ref PrivateSubnet2Id
          SecurityGroups:
            - !Ref ECSSecurityGroupId

  # --- CODE DEPLOY APPLICATION ---
  CodeDeployApp:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub ${AppName}-CodeDeploy-App
      ComputePlatform: ECS

  # --- CODE DEPLOY DEPLOYMENT GROUP ---
  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn: ECSService
    Properties:
      ApplicationName: !Ref CodeDeployApp
      DeploymentGroupName: !Sub ${AppName}-CodeDeploy-DG
      ServiceRoleArn: !ImportValue 'java-full-stack-CodeDeployServiceRoleArn'
      DeploymentConfigName: CodeDeployDefault.ECSAllAtOnce
      DeploymentStyle:
        DeploymentType: BLUE_GREEN
        DeploymentOption: WITH_TRAFFIC_CONTROL
      BlueGreenDeploymentConfiguration:
        TerminateBlueInstancesOnDeploymentSuccess:
          Action: TERMINATE
          TerminationWaitTimeInMinutes: 5
        DeploymentReadyOption:
          ActionOnTimeout: CONTINUE_DEPLOYMENT
        TargetGroupInfoList:
          - Name: !Ref ALBTargetGroupName
          - Name: !GetAtt GreenTargetGroup.TargetGroupName
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE
          - DEPLOYMENT_STOP_ON_ALARM
      ECSServices:
        - ServiceName: !GetAtt ECSService.Name
          ClusterName: !Ref ECSClusterName
      LoadBalancerInfo:
        TargetGroupInfoList:
          - Name: !Ref ALBTargetGroupName
          - Name: !GetAtt GreenTargetGroup.TargetGroupName

Outputs:
  ServiceURL:
    Description: 'URL to access the application'
    Value: !Sub http://${ALBDNSName}
  ECSServiceName:
    Description: 'ECS Service Name'
    Value: !Ref ECSService
  CodeDeployAppName:
    Description: 'CodeDeploy Application Name'
    Value: !Ref CodeDeployApp
  TestListenerArn:
    Description: 'Test Listener ARN for Blue-Green Deployment'
    Value: !Ref TestListener
  GreenTargetGroupName:
    Description: 'Green Target Group Name'
    Value: !GetAtt GreenTargetGroup.TargetGroupName